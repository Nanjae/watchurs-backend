type User {
  id: ID! @id
  uName: String! @unique
  uEmail: String! @unique
  uPassword: String!
  uLoginSecret: Int
  uBroadcaster: [Broadcaster!]! @relation(name:"UserOfBroadcaster")
  uLeagueCard: [LeagueCard!]! @relation(name:"LeagueCardOfUser" onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Broadcaster {
  id: ID! @id
  bId: String! @unique
  bName: String!
  bAvatar: String!
  bPlatform: String!
  bUser: [User!]! @relation(name:"UserOfBroadcaster" onDelete: CASCADE)
  bSummoner: Summoner @relation(name: "SummonerOfBroadcaster" onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Summoner {
  id: ID! @id
  sId: String! @unique
  sName: String!
  sAvatar: String!
  sTier: String! @default(value:"UNRANKED")
  sTierNum: Int! @default(value:99)
  sRank: String! @default(value:"UNRANKED")
  sPoints: Int! @default(value:0)
  sWins: Int! @default(value:0)
  sLosses: Int! @default(value:0)
  sBroadcaster: Broadcaster! @relation(name: "SummonerOfBroadcaster" link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type LeagueCard {
  id: ID! @id
  lCardName: String!
  lCardInfo: [CardInfo!]! @relation(name:"CardBroadcasterOfLeagueCard" onDelete:CASCADE)
  lUser: User @relation(name:"LeagueCardOfUser" link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type CardInfo {
  id: ID! @id
  cPos: Int!
  cLine: String!
  cBId: String!
  cLeagueCard: LeagueCard! @relation(name:"CardBroadcasterOfLeagueCard" link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}