type Broadcaster {
  id: ID! @id
  broadId: String! @unique
  name: String
  avatar: String
  platform: String
  summoners: [Summoner] @relation(name: "SummonerOfBroadcaster", onDelete: CASCADE)
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}

type Summoner {
  id: ID! @id
  summonerId: String! @unique
  accountId: String! @unique
  name: String!
  avatar: String
  level: Int
  tftData: TFTData @relation(name: "TFTDataOfSummoner", onDelete: CASCADE)
  lolData: LOLData @relation(name: "LOLDataOfSummoner", onDelete: CASCADE)
  broadcaster: Broadcaster! @relation(name: "SummonerOfBroadcaster", link: INLINE)
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}

type TFTData {
  id: ID! @id
  tier: String! @default(value: "UNRANKED")
  tierNum: Int! @default(value: 99)
  rank: String! @default(value: "99")
  points: Int! @default(value: 0)
  wins: Int
  losses: Int
  summoner: Summoner! @relation(name: "TFTDataOfSummoner", link: INLINE)
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}

type LOLData {
  id: ID! @id
  tier: String! @default(value: "UNRANKED")
  tierNum: Int! @default(value: 99)
  rank: String! @default(value: "99")
  points: Int! @default(value: 0)
  wins: Int
  losses: Int
  summoner: Summoner @relation(name: "LOLDataOfSummoner", link: INLINE)
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}